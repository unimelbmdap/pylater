[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pylater"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10,<3.14"
license = "MIT"
keywords = []
authors = [
  { name = "Damien Mannion", email = "damien@djmannion.net" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/unknown/pylater#readme"
Issues = "https://github.com/unknown/pylater/issues"
Source = "https://github.com/unknown/pylater"

[tool.hatch]
version.path = "src/pylater/__about__.py"
envs.default.dependencies = [
  "numpy",
  "scipy",
  "pymc",
  "sympy",
]
envs.interactive.dependencies = [
  "ipython",
  "matplotlib",
  "pyqt6",
  "pickleshare",
]
envs.interactive.scripts.i = "ipython --pylab=qt"
envs.types.extra-dependencies = [
  "mypy"
]
envs.types.scripts.check = "mypy {args:src/pylater tests}"

envs.docs.dependencies = [
  "sphinx",
  "sphinx_rtd_theme",
  "nbsphinx",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]


[tool.mypy]
plugins = "numpy.typing.mypy_plugin"
# corresponding to --strict
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true

[[tool.mypy.overrides]]
module = [
  "scipy",
  "scipy.stats",
  "pymc",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 88
extend-select = [
  "NPY",  # numpy
  "PTH",  # flake8-usepathlib
  "Q",  # flake8-quotes
  "ANN",  # flake8-annotations
]
